{
  "version": 3,
  "file": "appInfo.js",
  "sourceRoot": "",
  "sources": [
    "../src/appInfo.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { ElectronPackagerOptions } from \"electron-packager-tf\"\nimport { DevMetadata, AppMetadata } from \"./metadata\"\nimport { warn } from \"./log\"\nimport { smarten } from \"./platformPackager\"\nimport { isEmptyOrSpaces } from \"./util\"\nimport { getRepositoryInfo } from \"./repositoryInfo\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"./awaiter\")\n\nexport class AppInfo {\n  readonly description = smarten(this.metadata.description)\n\n  // windows-only\n  versionString = {\n    CompanyName: this.companyName,\n    FileDescription: this.description,\n    ProductName: this.productName,\n    InternalName: this.productName,\n    LegalCopyright: this.copyright,\n  }\n\n  readonly version: string\n  readonly buildVersion: string\n\n  constructor(public metadata: AppMetadata, private devMetadata: DevMetadata) {\n    let buildVersion = metadata.version\n    this.version = buildVersion\n\n    const buildNumber = this.buildNumber\n    if (!isEmptyOrSpaces(buildNumber)) {\n      buildVersion += `.${buildNumber}`\n    }\n    this.buildVersion = buildVersion\n  }\n\n  get companyName() {\n    return this.metadata.author.name\n  }\n\n  get buildNumber(): string | null {\n   return this.devMetadata.build[\"build-version\"] || process.env.TRAVIS_BUILD_NUMBER || process.env.APPVEYOR_BUILD_NUMBER || process.env.CIRCLE_BUILD_NUM || process.env.BUILD_NUMBER\n  }\n\n  get id(): string {\n    const appId = this.devMetadata.build[\"app-bundle-id\"]\n    if (appId != null) {\n      warn(\"app-bundle-id is deprecated, please use appId\")\n    }\n\n    if (this.devMetadata.build.appId != null) {\n      return this.devMetadata.build.appId\n    }\n\n    if (appId == null) {\n      return `com.electron.${this.metadata.name.toLowerCase()}`\n    }\n    return appId\n  }\n\n  get name(): string {\n    return this.metadata.name\n  }\n\n  get productName(): string {\n    return getProductName(this.metadata, this.devMetadata)\n  }\n\n  get copyright(): string {\n    const copyright = (<ElectronPackagerOptions>this.devMetadata.build)[\"app-copyright\"]\n    if (copyright != null) {\n      return copyright\n    }\n    return `Copyright Â© ${new Date().getFullYear()} ${this.metadata.author.name || this.productName}`\n  }\n\n  async computePackageUrl(): Promise<string | null> {\n    const url = this.metadata.homepage || this.devMetadata.homepage\n    if (url != null) {\n      return url\n    }\n\n    const info = await getRepositoryInfo(this.metadata, this.devMetadata)\n    if (info != null) {\n      return `https://github.com/${info.user}/${info.project}`\n    }\n    return null\n  }\n}\n\nfunction getProductName(metadata: AppMetadata, devMetadata: DevMetadata) {\n  return devMetadata.build.productName || metadata.productName || metadata.name\n}"
  ]
}
